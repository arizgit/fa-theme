{%- comment -%}
----------------------------------------------------------------------------------------------------------------------
PRODUCT CARD TEASER COMPONENT
----------------------------------------------------------------------------------------------------------------------

This component is used in collection and featured collection to render a single product as a card

********************************************
Supported variables
********************************************

* product: the product to render
* show_vendor: show or not the vendor. If nothing is set, the theme uses the default product card setting
* show_quick_buy: show or not the quick buy. If nothing is set, the theme uses the default product card setting
* show_hover_effect: show the hover effect
* stacked: indicate if the product is in stack mode
* reveal: if set to true the item will be revealed in a stacked mode
* background: the background to use for the product card (if none is passed then the one from the global setting is used)
* text_color: the text color to use for the product card (if none is passed then the one from the global setting is used)
* text_alignment: can be "center". If nothing is set, the theme uses the default product card setting
{%- endcomment -%}

{%- assign show_vendor = show_vendor | default: settings.teaser_show_vendor, allow_false: true -%}
{%- assign show_quick_buy = show_quick_buy | default: settings.teaser_show_quick_buy, allow_false: true -%}
{%- assign show_hover_effect = show_hover_effect | default: settings.teaser_show_hover_effect, allow_false: true -%}
{%- assign show_price = show_price | default: settings.teaser_show_price, allow_false: true -%}
{%- assign text_alignment = text_alignment | default: settings.teaser_product_info_alignment -%}

{%- if stacked and section.settings.products_per_row_mobile == '2' -%}
  {%- assign mobile_reduced = true -%}
{%- endif -%}

{%- assign card_background = background -%}
{%- assign card_text_color = text_color -%}
{%- assign card_class = 'product-card product-card--teaser ' -%}

{%- if show_secondary_image and product.media.size > 1 -%}
  {%- assign card_class = card_class | append: 'product-card--show-secondary-media ' -%}
{%- endif -%}

{% if show_hover_effect %}
  {% assign card_class = card_class | append: 'product-card--hover zoom-image--enabled ' %}
  {% if settings.teaser_product_card_hover_color != blank %}
    {% assign hover_color = '--hover:' | append: settings.teaser_product_card_hover_color.rgb |  append: ';' %}
  {% endif %}
{% endif %}

{%- assign card_class = card_class | append: settings.teaser_product_card_scheme -%}

<product-card  handle="{{ product.handle | escape }}" {% if reveal %}reveal-js{% endif %} {% render 'surface', class: card_class, background: card_background, text_color: card_text_color, style: hover_color %}>
  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  PRODUCT BADGES
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  {%- if show_badges and product.media.size > 0 -%}
    {%- render 'product-badges', product: product, class: 'product-card__badge-list', card_type: 'teaser' -%}
  {%- endif -%}

  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  PRODUCT MEDIA
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  {%- if product.media.size > 0 -%}
    <div class="product-card__figure">
      <a href="{{ product.url }}" data-instant>
        {%- capture sizes -%}
          {%- if stacked -%}
            (max-width: 699px) calc(100vw / {{ section.settings.products_per_row_mobile }} - 40px), (max-width: 1200px) calc(100vw / {{ 3 | at_most: section.settings.products_per_row_desktop }} - 64px), calc((100vw - 96px) / {{ section.settings.products_per_row_desktop }} - (24px / {{ section.settings.products_per_row_desktop }} * {{ section.settings.products_per_row_desktop | minus: 1 }}))
          {%- else -%}
            (max-width: 699px) 74vw, (max-width: 999px) 38vw, calc((100vw - 96px) / {{ section.settings.products_per_row_desktop }} - (24px / {{ section.settings.products_per_row_desktop }} * {{ section.settings.products_per_row_desktop | minus: 1 }}))
          {%- endif -%}
        {%- endcapture -%}

        {%- capture main_image_classes -%}product-card__image product-card__image--primary {%if show_hover_effect %}zoom-image {% endif %}{% if settings.product_image_aspect_ratio contains 'crop' %}object-fill-safe{% endif %} aspect-{{ settings.product_image_aspect_ratio | split: '_' | first }}{%- endcapture -%}
        
        {% if product.metafields.custom.collection_image != blank %}
          {{- product.metafields.custom.collection_image | image_url: width: product.featured_media.width | image_tag: loading: 'lazy', sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800', class: main_image_classes -}}
          {% else %}
          {{- product.featured_media | image_url: width: product.featured_media.width | image_tag: loading: 'lazy', sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800', class: main_image_classes -}}
        {% endif %}
        
        {% comment %}
          {{- product.featured_media | image_url: width: product.featured_media.width | image_tag: loading: 'lazy', sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800', class: main_image_classes -}}
        {% endcomment %}
        {% comment %}
        PUT THE HOVER EFFECT IMAGE HERE
        {%- if show_secondary_image and product.media.size > 1 -%}
          {%- assign next_media = product.media[product.featured_media.position] | default: product.media[1] -%}
          {{- next_media | image_url: width: next_media.width | image_tag: class: 'product-card__image product-card__image--secondary object-fill', loading: 'lazy', fetchpriority: 'low', sizes: sizes, widths: '200,300,400,500,600,700,800,1000,1200,1400,1600,1800' -}}
        {%- endif -%}
        {% endcomment %}
      </a>

      {%- if show_quick_buy and product.available -%}
        <div class="product-card__quick-buy">
          {%- assign quick_add_label = 'product.general.quick_add' | t -%}

          {%- if product.variants.size == 1 and product.selling_plan_groups.size == 0 -%}
            {%- form 'product', product, is: 'product-form' -%}
              <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">

              <div class="pointer-fine:hidden">
                <button type="submit" is="custom-button" class="product-card__mobile-quick-buy-button" aria-label="{{ quick_add_label | escape }}">
                  {%- render 'icon' with 'quick-buy-cart' -%}
                </button>
              </div>

              <div class="pointer-coarse:hidden">
                {%- render 'button', type: 'submit', content: quick_add_label -%}
              </div>
            {%- endform -%}
          {%- else -%}
            {%- capture quick_buy_id -%}quick-buy-{{ section.id }}-{{ product.id }}{%- endcapture -%}

            <div class="pointer-fine:hidden">
              <button type="button" aria-controls="{{ quick_buy_id }}" aria-expanded="false" aria-label="{{ quick_add_label | escape }}" is="custom-button" class="product-card__mobile-quick-buy-button">
                {%- render 'icon' with 'quick-buy-cart' -%}
              </button>
            </div>

            <div class="pointer-coarse:hidden">
              {%- render 'button', content: quick_add_label, aria_controls: quick_buy_id -%}
            </div>

            <quick-buy-drawer id="{{ quick_buy_id }}" header-bordered open-from="bottom" handle="{{ product.handle }}" role="region" aria-live="polite" class="quick-buy-drawer drawer">
              {%- comment -%}Quick buy content is filled on demand for performance reasons {%- endcomment -%}
            </quick-buy-drawer>
          {%- endif -%}
        </div>
      {%- endif -%}
    </div>
  {%- endif -%}

  {%- comment -%}
  --------------------------------------------------------------------------------------------------------------------
  PRODUCT INFO
  --------------------------------------------------------------------------------------------------------------------
  {%- endcomment -%}

  <div class="product-card__info {% if text_alignment == 'center' %}product-card__info--center{% endif %}">
    {%- if show_vendor and product.vendor != blank -%}
      {%- render 'vendor' with product.vendor, class: 'text-xs' -%}
    {%- endif -%}
    {%- assign text_class = 'v-stack gap-0.5 w-full '-%}
    {%- if text_alignment == 'center' -%}
      {%- assign text_class = text_class | append: 'justify-items-center' -%}
    {%- endif -%}
    {% if product.metafields.card.cta != blank %}
      {%- assign text_class = text_class | append: 'transform ' -%}
    {%- endif -%}
    <div class="{{ text_class }}">
      {% if show_price %}
        {%- render 'price-list',
          list_price: product.metafields.custom.list_price,
          sale_price: product.metafields.custom.sale_price,
          variant: product.selected_or_first_available_variant,
          text_alignment: text_alignment
        -%}
      {% endif %}
      <span class="product-card__title"><a href="{{ product.url }}" class="h4" data-instant>{{ product.title }}</a></span>
      {% if product.metafields.card.cta != blank %}
        <span class="text-eyebrow">{{ product.metafields.card.cta }}</span>
      {% endif %}

    </div>

  </div>
</product-card>